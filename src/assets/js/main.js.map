{"version":3,"sources":["_scene-scroll-control.js","_scroll-to-block.js","_tracking-postition.js","components/_menu-mobile.js","components/_modal-window.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtpfile":"main.js","sourcesContent":["/*\r\n    ---------------------------------------------------------------\r\n    Startup template creator - \"Made with love, especially for you\"\r\n    ---------------------------------------------------------------\r\n    nickname: Michael Holiday\r\n    organization: \"Totonis.com\"\r\n    date: 18.06.2018\r\n    email: mr.michael.holiday@gmail.com\r\n    ---------------------------------------------------------------\r\n    parting words: \"Only fools go all the time ahead. Smart people go where they want.\"\r\n    ---------------------------------------------------------------\r\n*/\r\n\r\nclass SceneScrollControl {\r\n    constructor(config) {\r\n\r\n        // accept config options\r\n        this.scene      = $(config.scene)\r\n        this.tracking   = $(config.tracking)\r\n\r\n        // additional variables\r\n        this.saveState  = null\r\n        this.flag       = false\r\n\r\n        // save class context \r\n        let that = this\r\n\r\n        // request call handler\r\n        this.callHandler(that)\r\n    }\r\n    \r\n    // call handler\r\n    callHandler(that) {\r\n\r\n        // handler disable block scroll\r\n        that.tracking.on('sceneScrollOff', () => {\r\n            that.scrollSceneOff(that)\r\n        })\r\n        \r\n        // handler enable block scroll\r\n        that.tracking.on('sceneScrollOn', () => {\r\n            that.scrollSceneOn(that)\r\n        })\r\n    }\r\n\r\n    // disable scrolling on the block\r\n    scrollSceneOff(that) {\r\n\r\n        // chekc state flag\r\n        if (!that.flag) {\r\n            \r\n            // inverse state flag\r\n            that.flag = !that.flag\r\n            \r\n            that.saveState = that.scene.css('overflow-y')\r\n            that.scene.css('overflow-y', 'hidden')\r\n        }\r\n    }\r\n    \r\n    // enable scrolling on the scene\r\n    scrollSceneOn(that) {\r\n\r\n        // chekc state flag\r\n        if (that.flag) {\r\n    \r\n            // inverse state flag\r\n            that.flag = !that.flag\r\n    \r\n            // unlock scroll scene\r\n            that.scene.css('overflow-y', that.saveState)\r\n            that.saveState = null\r\n        }\r\n    }\r\n}","class ScrollToBlockParent{\r\n\tconstructor(){\r\n\r\n\t\t// default value variables\r\n\t\tthis.place \t= $('html')\r\n\t\tthis.offset = 0\r\n\t\tthis.speed \t= 600\r\n\t}\r\n}\r\n\r\n\r\nclass ScrollToBlock extends ScrollToBlockParent {\r\n\tconstructor(config){\r\n\r\n\t\tsuper()\r\n\r\n\t\t// accept config options\r\n\t\tthis.trigger \t= $(config.trigger)\r\n\t\tthis.anchor \t= $(config.anchor)\r\n\r\n\t\tif (config.offset) {\r\n\t\t\tthis.offset = config.offset\r\n\t\t}\r\n\t\t\r\n\t\tif (config.speed) {\r\n\t\t\tthis.speed = config.speed\r\n\t\t}\r\n\r\n\t\tif (config.place) {\r\n\t\t\tthis.place = $(config.place)\r\n\t\t}\r\n\r\n\t\t// save class context\r\n\t\tlet that = this\r\n\r\n\t\t// handler click\r\n\t\tthis.callHandler(that)\r\n\t}\r\n\r\n    // enable event handler\r\n\tcallHandler(that) {\r\n\r\n\t\t// enable click handler\r\n\t\tthat.trigger.on('click', function() {\r\n\r\n\t\t\t// disable default action\r\n\t\t\tevent.preventDefault()\r\n\r\n\t\t\t// enable scrolling\r\n\t\t\tthat.scroll(that)\r\n\t\t})\r\n\t}\r\n\t\r\n\t// function for scrolling the place to the anchor\r\n\tscroll(that) {\r\n\t\t\r\n\t\t// Animation scroll\r\n\t\tthat.place.animate({\r\n\t\t\tscrollTop: that.calcPosition(that)\r\n\t\t}, that.speed)\r\n\t}\r\n\r\n\t// Returns the required scrollTop from offsetTop\r\n\tcalcPosition(that) {\r\n\r\n\t\t// calc variables\r\n\t\tlet anchorOffsetTop = that.anchor.eq(0).offset().top\r\n\t\tlet calc\t\t\t= anchorOffsetTop - that.offset\t\t\r\n\t\treturn calc\r\n\t}\r\n}","/*\r\n    ---------------------------------------------------------------\r\n    Startup template creator - \"Made with love, especially for you\"\r\n    ---------------------------------------------------------------\r\n    nickname: Michael Holiday\r\n    organization: \"Totonis.com\"\r\n    date: 18.06.2018\r\n    email: mr.michael.holiday@gmail.com\r\n    ---------------------------------------------------------------\r\n    parting words: \"A clever person creates more opportunities than he finds.\"\r\n    ---------------------------------------------------------------\r\n*/\r\n\r\nclass ItemTrackingParent {\r\n    constructor() {\r\n\r\n        // default value variables\r\n        this.place = $(document)\r\n        this.eventPlace = $('body')\r\n        this.offset = 0\r\n    }\r\n}\r\n\r\nclass ItemTracking extends ItemTrackingParent {\r\n\r\n    constructor(config) {\r\n        super()\r\n\r\n        // accept config options\r\n        this.trigger = $(config.trigger)\r\n        this.callBack = config.callBack\r\n        \r\n        if (config.offset) {\r\n            this.offset = parseInt(config.offset, 10)\r\n        }\r\n\r\n        if (config.place) {\r\n            this.place = $(config.place)\r\n        }\r\n\r\n        // accept config options for custom event\r\n        if (config.eventName) {\r\n            this.eventName = config.eventName\r\n        }\r\n        if (config.eventPlace) {\r\n            this.eventPlace = $(config.eventPlace)\r\n        }\r\n\r\n        // additional variable\r\n        this.window = $(window)\r\n        this.flagEvent = false\r\n\r\n        // save class context \r\n        let that = this        \r\n\r\n        // handler scroll\r\n        this.handlerScroll(that)\r\n    }\r\n\r\n    // visibility action function\r\n    visibilityAction(that) {\r\n        \r\n        // enable callBack function\r\n        that.callBack()\r\n    \r\n        // call function custom event \r\n        that.customEvent(that)\r\n    }\r\n\r\n    // enable custom event\r\n    customEvent(that) {\r\n\r\n        // check necessity in custom event\r\n        if (that.eventName && !that.flagEvent) {\r\n\r\n            // inverse state flag\r\n            that.flagEvent = !that.flagEvent\r\n\r\n            // output a custom event on the place\r\n            that.eventPlace.trigger(that.eventName)\r\n        }\r\n    }\r\n\r\n    // enable scroll handler\r\n    handlerScroll(that) {\r\n        \r\n        // handler scroll in place\r\n        that.place.on('scroll', function() {\r\n            \r\n            // check element view in screen\r\n            if (that.calcPosition(that) <= 0) {\r\n\r\n                // run callBack function of config\r\n                that.visibilityAction(that) \r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    // to calc position block in window\r\n    calcPosition(that) {\r\n\r\n        // get offset top trigger subtract window height and add offset of config\r\n        let calc = that.trigger.eq(0).offset().top - that.place.scrollTop() - that.window.height() + that.offset\r\n\r\n        return Math.round(calc)\r\n    }\r\n}\r\n","/*\r\n    ---------------------------------------------------------------\r\n    Startup template creator - \"Made with love, especially for you\"\r\n    ---------------------------------------------------------------\r\n    nickname: Michael Holiday\r\n    organization: \"Totonis.com\"\r\n    date: 18.06.2018\r\n    email: mr.michael.holiday@gmail.com\r\n    ---------------------------------------------------------------\r\n    parting words: \"In their youth they learn, and they understand it in old age.\"\r\n    ---------------------------------------------------------------\r\n*/\r\n\r\nclass MobileMenu {\r\n    constructor(config) {\r\n\r\n        // accept config options\r\n        this.menu = $(config.menu)\r\n        this.menuToggle = $(config.menuToggle)\r\n        this.menuClassCollapse = config.menuClassCollapse\r\n        this.menuToggleClassClose = config.menuToggleClassClose\r\n        this.breakPoint = config.breakPoint\r\n\r\n        // additional variables\r\n        this.flag = false\r\n        this.flagBgreak = false\r\n\r\n        // save class context \r\n        let that = this\r\n\r\n        // launch of the menu visibility toggle handler\r\n        this.handlerToggle(that)\r\n    }\r\n\r\n    // handler toggle menu\r\n    handlerToggle(that) {\r\n\r\n        // track the click event of the toggle\r\n        that.menuToggle.click(function () {\r\n\r\n            // check whether the menu is open\r\n            if (that.flag) {\r\n                \r\n                // close the menu\r\n                that.menuClose(that)\r\n            }\r\n           \r\n            // check whether the menu is close\r\n            else if (!that.flag) {\r\n\r\n                // open the menu\r\n                that.menuOpen(that)\r\n            } \r\n            \r\n        })\r\n    }\r\n\r\n    // interface open menu\r\n    menuOpen(that) {\r\n\r\n        // inverse state flag\r\n        that.flag = !that.flag\r\n\r\n        // open menu\r\n        that.menu.addClass(that.menuClassCollapse)\r\n        that.menuToggle.addClass(that.menuToggleClassClose)\r\n\r\n        // lock scroll body\r\n        that.scrollControll('body', 'off')\r\n\r\n        //enable the resize handler\r\n        that.resizeHandler('on', that, 'body')\r\n    }\r\n\r\n    // interface close menu\r\n    menuClose(that) {\r\n\r\n            // inverse state flag\r\n            that.flag = !that.flag\r\n\r\n            // close menu\r\n            that.menu.removeClass(that.menuClassCollapse)\r\n            that.menuToggle.removeClass(that.menuToggleClassClose)\r\n\r\n            // unlock scroll body\r\n            that.scrollControll('body', 'on')\r\n\r\n            // disable the resize handler\r\n            that.resizeHandler('off', that, 'body')\r\n    }\r\n\r\n    // handler resize\r\n    resizeHandler(command, that, place) {\r\n\r\n        // сhecking the command to enable the handler\r\n        if (command == 'on') {\r\n            \r\n            // enable the resize handler\r\n            $(window).on('resize', function () {\r\n            \r\n                // the window width is greater than or equal to the breakpoint\r\n                if ($(window).width() >= that.breakPoint && !that.flagBgreak) {\r\n                    \r\n                    // inverse state flag Break\r\n                    that.flagBgreak = true\r\n    \r\n                    // unlock scroll body\r\n                    that.scrollControll(place, 'on')\r\n                } \r\n                \r\n                // the width of the window is less than the breakpoint\r\n                else if ($(window).width() < that.breakPoint && that.flagBgreak) {\r\n                    \r\n                    // inverse state flag Break\r\n                    that.flagBgreak = false\r\n    \r\n                    // lock scroll body\r\n                    that.scrollControll(place, 'off')\r\n                }\r\n            })\r\n        } \r\n        \r\n        // сhecking the command to disable the handler\r\n        else if (command == 'off') {            \r\n\r\n            // disable the resize handler\r\n            $(window).off('resize')\r\n\r\n            // false state flag Break\r\n            that.flagBgreak = false\r\n        }\r\n\r\n    }\r\n\r\n    // interface scroll controll\r\n    scrollControll(place, command) {\r\n\r\n        // checking the command to turn on the scroll\r\n        if (command == 'on') {\r\n            $(place).trigger('sceneScrollOn')\r\n\r\n        } \r\n        \r\n        // checking the command to turn off the scroll\r\n        else if (command == 'off') {\r\n            $(place).trigger('sceneScrollOff')\r\n        }\r\n    }\r\n}","/*\r\n    ---------------------------------------------------------------\r\n    Startup template creator - \"Made with love, especially for you\"\r\n    ---------------------------------------------------------------\r\n    nickname: Michael Holiday\r\n    organization: \"Totonis.com\"\r\n    date: 18.06.2018\r\n    email: mr.michael.holiday@gmail.com\r\n    ---------------------------------------------------------------\r\n    parting words: \"Well-bred people do not talk in the community about the weather or about religion.\"\r\n    ---------------------------------------------------------------\r\n*/\r\n\r\nclass ModalWindow {\r\n    constructor(config) {\r\n\r\n        // accept config options\r\n        this.title              = config.title\r\n        this.contentElem        = $(config.contentElem)\r\n        this.triggerOpen        = $(config.triggerOpen)\r\n        \r\n        // modal window conponents\r\n        this.modal              = null\r\n        this.triggerClose       = null\r\n        this.modalContainer     = null\r\n        this.modalTitle         = null\r\n\r\n        // additional variables\r\n        this.flag   = false\r\n        \r\n        // save class context \r\n        let that  = this\r\n\r\n        // initialize modal window creation\r\n        this.createModal(that)\r\n        this.buildModal(that)\r\n\r\n        // append modal in body\r\n        $('body').append(this.modal)\r\n        \r\n        // toggling the visibility of the modal window\r\n        this.handlerOpen(that)\r\n        this.handlerClose(that)\r\n    }\r\n\r\n    // creating modal window components\r\n    createModal(that) {\r\n\r\n        // create modal\r\n        that.modal = document.createElement('div')\r\n        that.modal = $(that.modal)\r\n        that.modal.addClass('b-modal-window')\r\n\r\n        // create modal close btn\r\n        that.triggerClose = document.createElement('div')\r\n        that.triggerClose = $(that.triggerClose)\r\n        that.triggerClose.addClass('b-modal-window__close')\r\n        \r\n        // create modal container\r\n        that.modalContainer = document.createElement('div')\r\n        that.modalContainer = $(that.modalContainer)\r\n        that.modalContainer.addClass('b-modal-window__container')\r\n        \r\n        // create modal title\r\n        that.modalTitle = document.createElement('div')\r\n        that.modalTitle = $(that.modalTitle)\r\n        that.modalTitle.addClass('b-modal-window__title')\r\n        that.modalTitle.text(that.title)\r\n        \r\n        // create modal content wrapper\r\n        that.modalContent = document.createElement('div')\r\n        that.modalContent = $(that.modalContent)\r\n        that.modalContent.addClass('b-modal-window__content')\r\n    }\r\n    \r\n    // build a modal window of components\r\n    buildModal(that) {\r\n\r\n        // build modal\r\n        that.modal.append(that.triggerClose, that.modalContainer)\r\n        that.modalContainer.append(that.modalTitle, that.modalContent)\r\n        that.modalContent.append(that.contentElem)\r\n    }\r\n\r\n    // handler open modal\r\n    handlerOpen(that) {\r\n\r\n        // check event click open btn\r\n        that.triggerOpen.click(function() {           \r\n            that.modalOpen(that)\r\n        })\r\n    }\r\n    \r\n    // handler close modal\r\n    handlerClose(that) {\r\n        \r\n        // check event click close btn\r\n        that.triggerClose.click(function() {\r\n            that.modalClose(that)\r\n        })\r\n    }\r\n    \r\n    // interface close modal\r\n    modalClose(that) {\r\n        \r\n        // chekc state flag\r\n        if (that.flag) {\r\n            \r\n            // inverse state flag\r\n            that.flag = !that.flag\r\n            \r\n            // close modal\r\n            that.modal.removeClass('b-modal-window_collapse')\r\n            \r\n            // unlock scroll body\r\n            that.scrollControll('body', 'on')\r\n        }\r\n    }\r\n    \r\n    // interface open modal\r\n    modalOpen(that) {\r\n        \r\n        // chekc state flag\r\n        if (!that.flag) {\r\n            \r\n            // inverse state flag\r\n            that.flag = !that.flag\r\n            \r\n            // open modal\r\n            that.modal.addClass('b-modal-window_collapse')\r\n            \r\n            // lock scroll body\r\n            that.scrollControll('body', 'off')\r\n        }\r\n    }\r\n\r\n    // interface scroll controll\r\n    scrollControll(place, command) {\r\n\r\n        // check the received command\r\n        if (command == 'on') {\r\n            $(place).trigger('sceneScrollOn')\r\n\r\n        } else if (command == 'off') {\r\n            $(place).trigger('sceneScrollOff')\r\n        }\r\n    }\r\n}"]}